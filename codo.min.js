let names = 0; function Codo(o) { this.queue = [], this.animating = !1, this.parent = $(o), this.name = names, names++, this.parent.html(`\n        <div class="codo-container codo-${this.name}">\n            <div class="codo codo-${this.name} old">\n                ${this.parent.html()}\n            </div>\n            <div class="codo codo-${this.name} new">\n                ${this.parent.html()}\n            </div>\n        </div>\n    `), this.codo_container = $(".codo-container.codo-" + this.name), this.codo_old = $(".codo.codo-" + this.name + ".old"), this.codo_new = $(".codo.codo-" + this.name + ".new"), this.update = function (o) { if (null != o && this.queue.push(o), !this.animating) { this.animating = !0, o = this.queue[0], this.queue.shift(), this.codo_new.html(o), this.update_dim(), this.codo_new.addClass("in"), this.codo_old.addClass("out"); let t = this; setTimeout(function () { t.codo_old.html(o), t.update_dim(), t.codo_old.removeClass("out"), t.codo_new.removeClass("in"), t.animating = !1, t.queue.length > 0 && t.update() }, 1500) } }, this.update_dim = function () { this.codo_old.width("max-content"), this.codo_new.width("max-content"), this.codo_new.width() > this.codo_old.width() ? (this.codo_container.width(this.codo_new.width() + "px"), this.codo_container.height(this.codo_new.height() + "px"), this.codo_old.width(this.codo_new.width() + "px"), this.codo_old.height(this.codo_new.height() + "px")) : (this.codo_container.width(this.codo_old.width() + "px"), this.codo_container.height(this.codo_old.height() + "px"), this.codo_new.width(this.codo_old.width() + "px"), this.codo_new.height(this.codo_old.height() + "px")) }, this.update_dim() }